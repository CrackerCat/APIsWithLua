# makefile_setup
#
# This makefile is meant to be included by chapter-specific
# makefiles within each ch* directory.
#
# Here are the meanings of some key variables:
#
# Variable   Meaning
# -----------------------------
#
# flags      standard C compilation flags
#
# lualib     name of Lua library file to build
#            (omitted on Windows as we assume it's prebuilt)
#
# luaflags   platform-specific flags for building $(lualib)
#
# soext      filename extension for shared object files
#            (this is dll on windows, so on other systems)
#
# soflags    cc flags specific to building so files
#            (Windows is a 2-step process; see ch4/makefile)
#

cc = cc -std=c99

ifeq ($(OS),Windows_NT)
	# Windows.
	flags    = -llua
	soext    = dll
else ifeq ($(shell uname),Darwin)
	# macOS.
	flags    = -llua -L../lua -I../lua
	lualib   = ../lua/liblua.a
	luaflags = SYSCFLAGS="-DLUA_USE_MACOSX"
	soext    = so
	soflags  = -undefined dynamic_lookup -I../lua
else
	# Guess Linux.
	flags    = -llua -L../lua -I../lua -lm -ldl -D_POSIX_C_SOURCE=199309L
	lualib   = ../lua/liblua.a
	luaflags = SYSCFLAGS="-DLUA_USE_LINUX"
	soext    = so
	soflags  = -I../lua -shared -fpic
endif

all = $(binaries) $(other)

all: $(all)

clean:
	rm -f $(all) *.o

$(binaries) : % : %.c $(lualib)
	$(cc) $< -o $@ $(flags)

../lua/liblua.a:
	make -C ../lua liblua.a $(luaflags)
